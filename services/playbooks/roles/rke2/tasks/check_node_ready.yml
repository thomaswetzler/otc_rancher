---

- name: Wait for k8s apiserver
  ansible.builtin.wait_for:
    host: localhost
    port: "6443"
    state: present
    timeout: "{{ check_node_ready_timeout }}"
  changed_when: false
  register: api_serve_status
  ignore_errors: "{{ check_node_ready_ignore_errors }}"

- name: Set fact
  ansible.builtin.set_fact:
    rke2_api_server_running: true
  when:
    - api_serve_status.state is not undefined
    - api_serve_status.state == "present"

- name: Set fact
  ansible.builtin.set_fact:
    rke2_api_server_running: "{{ rke2_api_server_running }}"

- name: Get node_metrics
  ansible.builtin.uri:
    url: https://localhost:10250/metrics
    return_content: true
    ca_path: /var/lib/rancher/rke2/server/tls/server-ca.crt
    client_cert: /var/lib/rancher/rke2/server/tls/client-admin.crt
    client_key: /var/lib/rancher/rke2/server/tls/client-admin.key
  register: node_metrics
  retries: "{{ check_node_ready_retries }}"
  delay: "{{ check_node_ready_delay }}"
  ignore_errors: "{{ check_node_ready_ignore_errors }}"

- name: Check that node_metrics collection was successful
  ansible.builtin.set_fact:
    rke2_metrics_running: true
  when:
    - 200 | string in node_metrics.status | string

- name: Set fact for rke2_metrics_running
  ansible.builtin.set_fact:
    rke2_metrics_running: "{{ rke2_metrics_running }}"

- name: Extract the kubelet_node_name from node metrics
  ansible.builtin.set_fact:
    kubelet_node_name: "{{ node_metrics.content | regex_search('kubelet_node_name{node=\"(.*)\"}', '\\1') }}"
  when:
    - 200 | string in node_metrics.status | string

- name: Wait for node to show Ready status
  ansible.builtin.command: >-
    /var/lib/rancher/rke2/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml
    --server https://127.0.0.1:6443 get no {{ kubelet_node_name[0] }}
    -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}'
  register: status_result
  until: status_result.stdout.find("True") != -1
  retries: "{{ check_node_ready_retries }}"
  delay: "{{ check_node_ready_delay }}"
  changed_when: false
  ignore_errors: "{{ check_node_ready_ignore_errors }}"

- name: Set fact
  ansible.builtin.set_fact:
    rke2_node_ready: "true"
  when:
    - status_result.rc is not undefined
    - status_result.rc | string == "0"

- name: Set fact
  ansible.builtin.set_fact:
    rke2_node_ready: "{{ rke2_node_ready }}"

- name: Node status
  ansible.builtin.debug:
    msg: |
      "rke2_node_ready: {{ rke2_node_ready }}"
      "rke2_metrics_running: {{ rke2_metrics_running }}"
      "rke2_api_server_running: {{ rke2_api_server_running }}"
