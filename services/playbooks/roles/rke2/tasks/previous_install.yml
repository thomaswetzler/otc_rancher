---

- name: Set fact if rke2-server was previously installed
  ansible.builtin.set_fact:
    rke2_installed: true
  when:
    - ansible_facts.services["rke2-server.service"] is defined
    - not ansible_facts.services["rke2-server.service"].status == 'disabled'
    - inventory_hostname in groups['rke2_servers']
    - install_method == "tarball"

- name: Set fact if rke2-server is running
  ansible.builtin.set_fact:
    rke2_running: true
  when:
    - ansible_facts.services["rke2-server.service"] is defined
    - ansible_facts.services["rke2-server.service"].state == 'running'
    - inventory_hostname in groups['rke2_servers']

- name: Set fact if rke2-agent was previously installed
  ansible.builtin.set_fact:
    rke2_installed: true
  when:
    - ansible_facts.services["rke2-agent.service"] is defined
    - not ansible_facts.services["rke2-agent.service"].status == 'disabled'
    - inventory_hostname in groups.get('rke2_agents', [])
    - install_method == "tarball"

- name: Set fact if rke2-agent is running
  ansible.builtin.set_fact:
    rke2_running: true
  when:
    - ansible_facts.services["rke2-agent.service"] is defined
    - ansible_facts.services["rke2-agent.service"].state == 'running'
    - inventory_hostname in groups.get('rke2_agents', [])

- name: Check for the rke2 binary
  ansible.builtin.stat:
    path: /usr/local/bin/rke2
  register: rke2_binary
  when: install_method == "tarball"

- name: Get current rke2 version if already installed
  ansible.builtin.shell: set -o pipefail && /usr/local/bin/rke2 -v | awk '$1 ~ /rke2/ { print $3 }'
  register: rke2_installed_version_tmp
  changed_when: false
  args:
    executable: /usr/bin/bash
  when:
    - install_method == "tarball"
    - rke2_binary.stat.exists
  failed_when: >
    (rke2_installed_version_tmp.rc != 141) and
    (rke2_installed_version_tmp.rc != 0)

- name: Set fact for current rke2 version
  ansible.builtin.set_fact:
    rke2_installed_version: "{{ rke2_installed_version_tmp.stdout }}"
  when:
    - install_method == "tarball"
    - rke2_binary.stat.exists
